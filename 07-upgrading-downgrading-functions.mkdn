# The `utf8::` upgrading and downgrading functions

Those ones are *even more* low-level and their usefulness is very limited in
general. While `utf8::encode` and `utf8::decode` can change the stream of bytes
or codepoints representing a string, `utf8::downgrade` and `utf8::upgrade` will
not touch it. Their role is purely to ensure that the string is internally
encoded as UTF-8 (upgrade) or not (downgrade).

To be noted, `utf8::downgrade` will also die by default if passed a string that
cannot be represented as bytes.

    $ perl -E '$x="\x{133}"; eval { utf8::downgrade($x);1 } or print "error: $@"'
    error: Wide character in subroutine entry at -e line 1.
